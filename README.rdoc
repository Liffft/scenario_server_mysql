Step1: Clone the new scenario server from github
                  git clone https://github.com/gkexplore/scenario_server_mysql.git
Step 2: Make sure you have rvm 2.2.0 version. One can check that by running rvm list command 
                   rvm install 2.2.0
Step 3: Install rails 
                   gem install rails
                    if above command fails due to missing command line tools, then run : xcode-select â€”install  to install command line tools
                    Run the below command again and it would take around 10mins
                   gem install rails 
Step 4: Navigate to cloned scenario server code base and run the following commands
                   To install MySQL server
                   brew install mysql    
                   To install all the required gems for scenario server
                   bundle install

Step 5: Setup mysql

                   To Start MySQL
 
                    mysql.server start
                    
                    To set root password, run
                    mysql_secure_installation
                               Enter current password for root (enter for none): simply press enter
                               Set root password? [Y/n]  - type y
                               New password: auto@123
                               Re-enter new password: auto@123
                               Password updated successfully!
                               Remove anonymous users? [Y/n] - type n
                               Disallow root login remotely? [Y/n] - type n
                               Remove test database and access to it? [Y/n] - type n
                               Reload privilege tables now? [Y/n] - type y
                     To create db 
                               Login into mysql 
                                        mysql -uroot -pauto@123
                               Run below command to create database
                                        create database stubs;
                       Create tables by running the below command from scenario_server folder
                                        bin/rake db:migrate RAILS_ENV=development
Step 6: To start scenario server on port 9090
                  rails s -p 9090
                  Open any browser and access the below URL
                  http://localhost:9090
Now you should be able to see the home screen of scenario server in your machine
Configuring Rails server in Passenger Apache
Step 1: Install Passenger Gem
             gem install passenger
Step 2: Install Apache module using passenger
             rvmsudo passenger-install-apache2-module
Step 3: Modify httpd.conf file of apache
           a) Copy and Paste the below piece of code in /etc/apache2/httpd.conf
                 LoadModule passenger_module /Users/q9vh/.rvm/gems/ruby-2.2.0/gems/passenger-4.0.59/buildout/apache2/mod_passenger.so
                <IfModule mod_passenger.c>
                    PassengerRoot /Users/q9vh/.rvm/gems/ruby-2.2.0/gems/passenger-4.0.59
                    PassengerDefaultRuby /Users/q9vh/.rvm/gems/ruby-2.2.0/wrappers/ruby
                </IfModule>
          b) Uncomment the below line in httpd.conf file
                 Include /private/etc/apache2/extra/httpd-vhosts.conf
          c) Edit httpd-vhosts.conf file of apache as below
              NameVirtualHost *:80
              NameVirtualHost *:443
              Listen 443
             <VirtualHost *:80>
                   ServerName localhost
                     DocumentRoot "/var/www/scenario_server_mysql/public"
                    <Directory /var/www/scenario_server_mysql/public>
                          <IfVersion < 2.4>
                                Allow from all
                         </IfVersion>
                         <IfVersion >= 2.4>
                            Require all granted
                         </IfVersion> 
                              Options Indexes FollowSymLinks Includes ExecCGI
                              # This relaxes Apache security settings.
                             AllowOverride None
                             # MultiViews must be turned off.
                            Order allow,deny
                            RailsEnv production
                 </Directory>
             </VirtualHost>
              <VirtualHost *:443>
                     ServerName localhost
                     DocumentRoot "/var/www/scenario_server_mysql/public"
                    <Directory /var/www/scenario_server_mysql/public>
             <IfVersion < 2.4>
                   Allow from all
            </IfVersion>
           <IfVersion >= 2.4>
                    Require all granted
           </IfVersion> 
                    Options Indexes FollowSymLinks Includes ExecCGI
                    # This relaxes Apache security settings.
                    AllowOverride None
                    # MultiViews must be turned off.
                   Order allow,deny
                   RailsEnv production
        </Directory>
       SSLEngine on
       SSLCertificateFile /var/www/scenario_server_mysql/cert/server.crt
       SSLCertificateKeyFile /var/www/scenario_server_mysql/cert/server.key
       </VirtualHost>
Step 4: Clone scenario server in /var/www/  location
Step 5: Navigate to /var/www/scenario_server_mysql and run the below commands
               rvmsudo rake assets:precompile    - This would precompile all the static assets(stylesheets/css)
               Run the below commands to give write permission:
              chmod 755 /var/www/
              chmod -R 777 public/assets
              chmod -R u+w tmp
Step 6: Start the apache server
             sudo apachectl start
              To view the log run - tail -f -n+100 /var/log/apache2/error_log
 
   Now you should be able to access the scenario server in both http and https schemes. Also, the server would start during system startup itself. So no need to manually start the server.
